// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PBS{
  pbsCode String  @id
  pbsName String 
  zonals Zonals[]
  substation Substation[]
  complainCenter ComplainCenter[]
  revenueItem RevenueItem[]
  capitalItem CapitalItem[]
  supplier Supplier[]
  user User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("pbs")
}
model Zonals{
  zonalCode String @id
  zonalName String
  pbsCode String 
  pbs PBS @relation(fields: [pbsCode], references: [pbsCode])
  substation Substation[]
  complainCenter ComplainCenter[]
  revenueItem RevenueItem[]
  capitalItem CapitalItem[]
  user User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("zonals")
}
model Substation{
  substationCode String @id
  substationName String
  pbsCode String
  pbs PBS @relation(fields: [pbsCode], references: [pbsCode])
  zonalCode String
  zonals Zonals @relation(fields: [zonalCode], references: [zonalCode])
  revenueItem RevenueItem[]
  capitalItem CapitalItem[]
  user User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("substations")
}
model ComplainCenter{
  complainCode String @id
  complainName String
  pbsCode String
  pbs PBS @relation(fields: [pbsCode], references: [pbsCode])
  zonalCode String
  zonals Zonals @relation(fields: [zonalCode], references: [zonalCode])
  RevenueItem RevenueItem[]
  capitalItem CapitalItem[]
  user User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("complain_center")
}
model User{
  mobileNo String @id
  password String
  role String
  pbsCode String
  pbs PBS @relation(fields: [pbsCode], references: [pbsCode])
  zonalCode String?
  zonals Zonals? @relation(fields: [zonalCode], references: [zonalCode])
  substationCode String?
  substation Substation? @relation(fields: [substationCode], references: [substationCode])
  complainCode String?
  complainCenter ComplainCenter? @relation(fields: [complainCode], references: [complainCode])
  employee Employee?
  issueByCapital CapitalItem[] @relation("issueByCapital")
  capitalItemAssignToCapital CapitalItem[] @relation("assignToCapital")
  capitalItemApproveByCapital CapitalItem[] @relation("approveByCapital")
  capitalItemReveivedByCapital CapitalItem[] @relation("reveivedByCapital")
  capitalItemAddByCapital CapitalItem[] @relation("addByCapital")
  revenueItemissueByRevenue RevenueItem[] @relation("issueByRevenue")
  revenueItemassignToRevenue RevenueItem[] @relation("assignToRevenue")
  revenueItemapproveByRevenue RevenueItem[] @relation("approveByRevenue")
  revenueItemreveivedByRevenue RevenueItem[] @relation("reveivedByRevenue")
  revenueItemaddByRevenue RevenueItem[] @relation("addByRevenue")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("users")
}

model Employee{
  id String @id @default(uuid())
  name String
  designation String
  phone String?
  address String?
  trgId String?
  photoUrl String?
  signUrl String?
  mobileNo String @unique
  user User @relation(fields: [mobileNo], references: [mobileNo])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("employees")
}
model Department{
  id String @id @default(uuid())
  departmentName String
  designation Designation[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("departments")
}

model Designation{
  id String @id @default(uuid())
  designationName String
  departmentId String
  department Department @relation(fields: [departmentId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("designations")
}



model ItemType{
  id String @id @default(uuid())
  itemType String

  category Category[]
 
  capitalItem CapitalItem[]
  revenueItem RevenueItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("item_type")
}

model Category{
  id String @id @default(uuid())
  categoryName String @unique

  itemTypeId String
  itemType ItemType @relation(fields: [itemTypeId], references: [id])

  capitalItem CapitalItem[]
  subCategory SubCategory[]
  revenueItem RevenueItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("category")
}
model SubCategory{
  id String @id @default(uuid())
  subCategoryName String @unique

  categoryId String
  category Category @relation(fields: [categoryId], references: [id])

  capitalItem CapitalItem[]
  revenueItem RevenueItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("sub_category")
}
model Brand{
  id String @id @default(uuid())
  brandName String
  revenueItem RevenueItem[]
  capitalItem CapitalItem[]
  model Model[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("brands")
}
model Model{
  id String @id @default(uuid())
  modelName String
  brandId String
  revenueItem RevenueItem[]
  capitalItem CapitalItem[]
  brand Brand @relation(fields: [brandId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("models")
}

model CapitalItem{
  id String @id @default(uuid())
  serialNo String
  description String
  purchasedate String
  price String
  warranty String
  identificationNo String @unique
  status String
  modelId String?
  model Model? @relation(fields: [modelId], references: [id])
  brandId String?
  brand Brand? @relation(fields: [brandId], references: [id])

  pbsCode String
  pbs PBS @relation(fields: [pbsCode], references: [pbsCode])
  
  zonalCode String?
  zonals Zonals ? @relation(fields: [zonalCode], references: [zonalCode])
  complainCode String?
  complainCenter ComplainCenter? @relation(fields: [complainCode], references: [complainCode])
  substationCode String?
  substation Substation? @relation(fields: [substationCode], references: [substationCode])
  itemTypeId String?
  itemType ItemType? @relation(fields: [itemTypeId], references: [id])
  categoryId String?
  category Category? @relation(fields: [categoryId], references: [id])
  subCategoryid String?
  subCategory SubCategory? @relation(fields: [subCategoryid], references: [id])
  issueByMobileNo String ?
  issueBy User? @relation(fields: [issueByMobileNo], references: [mobileNo],name: "issueByCapital")
  assignToMobileNo String?
  assignTo User? @relation(fields: [assignToMobileNo], references: [mobileNo],name: "assignToCapital")
  approveByMobileNo String?
  approveBy User? @relation(fields: [approveByMobileNo], references: [mobileNo], name: "approveByCapital")
  receivedByMobileNo String?
  received User? @relation(fields: [receivedByMobileNo], references: [mobileNo], name: "reveivedByCapital")
  addByMobileNo String
  addBy User @relation(fields: [addByMobileNo], references: [mobileNo], name: "addByCapital")
  supplierId String
  supplier Supplier @relation(fields: [supplierId], references: [id])
  revenueItem RevenueItem []
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("capital_item")
}

model RevenueItem{
  id String @id @default(uuid())
  description String
  purchasedate String
  price String
  warranty String?
  serialNo String?
  status String
  identificationNo String?
  capitalItem CapitalItem? @relation(fields: [identificationNo], references: [identificationNo])
  modelId String?
  model Model? @relation(fields: [modelId], references: [id])
  brandId String?
  brand Brand? @relation(fields: [brandId], references: [id])
  pbsCode String
  pbs PBS @relation(fields: [pbsCode], references: [pbsCode])
  zonalCode String?
  zonals Zonals ? @relation(fields: [zonalCode], references: [zonalCode])
  complainCode String?
  complainCenter ComplainCenter? @relation(fields: [complainCode], references: [complainCode])
  substationCode String?
  substation Substation? @relation(fields: [substationCode], references: [substationCode])
  itemTypeId String?
  itemType ItemType? @relation(fields: [itemTypeId], references: [id])
  categoryId String?
  category Category? @relation(fields: [categoryId], references: [id])
  subCategoryid String?
  subCategory SubCategory? @relation(fields: [subCategoryid], references: [id])
  issueByMobileNo String ?
  issueBy User? @relation(fields: [issueByMobileNo], references: [mobileNo],name: "issueByRevenue")
  assignToMobileNo String?
  assignTo User? @relation(fields: [assignToMobileNo], references: [mobileNo],name: "assignToRevenue")
  approveByMobleNo String?
  approveBy User? @relation(fields: [approveByMobleNo], references: [mobileNo], name: "approveByRevenue")
  receivedByMobileNo String?
  received User? @relation(fields: [receivedByMobileNo], references: [mobileNo], name: "reveivedByRevenue")
  addByMobileNo String
  addBy User @relation(fields: [addByMobileNo], references: [mobileNo], name: "addByRevenue")
  supplierId String
  supplier Supplier @relation(fields: [supplierId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("revenue_item")
}

model Supplier{
  id String @id @default(uuid())
  name String
  address String
  phone String
  pbsCode String
  pbs PBS @relation(fields: [pbsCode], references: [pbsCode])
  capitalItem CapitalItem[]
  revenueItem RevenueItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("suppliers")
}

